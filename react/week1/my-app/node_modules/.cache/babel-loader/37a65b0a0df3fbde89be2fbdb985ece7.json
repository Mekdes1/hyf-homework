{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react\\\\my-app\\\\src\\\\index.js\";\n\n/*import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); */\n\n/*\nwelcome yo my app // header component\n  * dish number 1\n  * dish number 2 // list component\n  * dish x x\nenjoy the menu // footer component\ndishes = [\n  dish number 1,\n  dish number 2,\n  ....,\n  ....\n]\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nconst arrayOfDishes = [\"dish 1\", \"dish 2\", \"dish 3\"];\nconst root = document.getElementById(\"root\");\n\nfunction HelloFunc() {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \" welcome to my app \");\n}\n\n;\n\nfunction DishFunc(props) {\n  const eachDish = props.dishes.forEach(item => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, item));\n  });\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(DishFunc, {\n  props: arrayOfDishes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react/my-app/src/index.js"],"names":["React","ReactDOM","arrayOfDishes","root","document","getElementById","HelloFunc","DishFunc","props","eachDish","dishes","forEach","item","render"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAaA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,MAAMC,aAAa,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAtB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,SAASC,SAAT,GAAqB;AACnB,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAR;AACD;;AAAA;;AAED,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAsBC,IAAD,IAAQ;AAC5C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CADF,CADF;AAKD,GANgB,CAAjB;AAUD;;AAMDX,QAAQ,CAACY,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEX,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAmDC,IAAnD","sourcesContent":["/*import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister(); */\n\n/*\nwelcome yo my app // header component\n  * dish number 1\n  * dish number 2 // list component\n  * dish x x\nenjoy the menu // footer component\ndishes = [\n  dish number 1,\n  dish number 2,\n  ....,\n  ....\n]\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nconst arrayOfDishes = [\"dish 1\", \"dish 2\", \"dish 3\"];\nconst root = document.getElementById(\"root\");\n\nfunction HelloFunc() {\n  return (<h1> welcome to my app </h1>);\n};\n\nfunction DishFunc (props) {\n  const eachDish = props.dishes.forEach((item)=>{\n    return (\n      <ul>\n        <li>{item}</li>\n      </ul>\n    )\n  });\n\n\n\n}\n\n\n\n\n\nReactDOM.render(<DishFunc props={arrayOfDishes} />,root)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}