{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [{\n        \"id\": 1,\n        \"description\": \"Get out of bed\"\n      }, {\n        \"id\": 2,\n        \"description\": \"Brush teeth\"\n      }, {\n        \"id\": 3,\n        \"description\": \"Eat breakfast\"\n      }]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n\n  randomTodo() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    });\n  }\n\n  render() {\n    const {\n      isShow\n    } = this.state;\n    const {\n      todoList\n    } = this.state;\n    console.log({\n      todoList\n    });\n    const todo = this.state;\n    const myToDoList = todo.todoList.map(tasks => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: tasks.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, tasks.description);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, !isShow ? /*#__PURE__*/React.createElement(Counter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }\n    }, \"nothing to show\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, \"Todolist\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, myToDoList[Math.floor(Math.random() * myToDoList.length)]), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, \" Add to do\"));\n  }\n\n}\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(RenderTodo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 2\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","Counter","root","document","getElementById","RenderTodo","Component","constructor","props","state","todoList","randomTodo","bind","render","isShow","console","log","todo","myToDoList","map","tasks","id","description","Math","floor","random","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAwC;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG,CACT;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OADS,EAKT;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OALS,EAST;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OATS;AADA,KAAb;AAiBJ,SAAKC,UAAL,GAAiB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAjB;AAGG;;AACFD,EAAAA,UAAU,GAAE;AAEb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAME;;AAIFE,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKL,KAAtB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACN,MAAAA;AAAD,KAAZ;AACA,UAAMO,IAAI,GAAG,KAAKR,KAAlB;AAEA,UAAMS,UAAU,GAAGD,IAAI,CAACP,QAAL,CAAcS,GAAd,CAAkBC,KAAK,IAAI;AAC5C,0BAAQ;AAAI,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBD,KAAK,CAACE,WAA1B,CAAR;AAGD,KAJkB,CAAnB;AAMG,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAER,CAACR,MAAD,gBAAU,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFd,eAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACII,UAAU,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,UAAU,CAACQ,MAAtC,CAAD,CADd,CANQ,eAUR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVQ,CAAP;AAeJ;;AA/DuC;AAoFxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA1B,QAAQ,CAACa,MAAT,eACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EACkBX,IADlB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component{\nconstructor(props) {\n    super(props);\n    this.state = {\n      todoList : [ \n        {\n          \"id\": 1,\n          \"description\": \"Get out of bed\"\n        },\n        {\n          \"id\": 2,\n          \"description\": \"Brush teeth\"\n        },\n        {\n          \"id\": 3,\n          \"description\": \"Eat breakfast\"\n        }\n      ]\n     \n    }\nthis.randomTodo= this.randomTodo.bind(this); \n\n    \n  }\n randomTodo(){\n  \nreturn <div>\n       \n     </div>\n    \n  \n\n }\n \n    \n\nrender(){\n  const {isShow} = this.state;\n  const {todoList} = this.state;\n  console.log({todoList})\n  const todo = this.state;\n  \n  const myToDoList = todo.todoList.map(tasks => {\n    return  <li key={tasks.id}>{tasks.description}</li>\n      \n     \n  });\n  \n     return <div> \n\n   {!isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n \n    <ul>\n      { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n     </ul>\n  \n    <button> Add to do</button>\n  </div>\n  \n \n\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\nReactDOM.render(\n <RenderTodo /> , root);\n"]},"metadata":{},"sourceType":"module"}