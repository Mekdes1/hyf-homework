{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; //import Counter from \"./count\";\n\nconst root = document.getElementById(\"root\");\n/*const  todoList = [\n  {\n    id: 1,\n    description: \"Get out of bed\"\n  },\n  {\n    id: 2,\n    description: \"Brush teeth\"\n  },\n  {\n    id: 3,\n    description: \"Eat breakfast\"\n  }\n]\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [\n        {\n          id: 1,\n          description: \"Get out of bed\"\n        },\n        {\n          id: 2,\n          description: \"Brush teeth\"\n        },\n        {\n          id: 3,\n          description: \"Eat breakfast\"\n        }\n      ]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n  randomTodo() {}\n\n  render() {\n    const { isShow } = this.state;\n    const { todoList } = this.state;\n\n    const myToDoList = todoList.map(tasks => {\n      return <li key={tasks.id}>{tasks.description}</li>;\n    });\n\n    return (\n      <div>\n        {!isShow ? <Counter /> : <p>nothing to show</p>}\n\n        <h1>Todolist</h1>\n\n        <ul>{myToDoList[Math.floor(Math.random() * myToDoList.length)]}</ul>\n\n        <button> Add to do</button>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n\n  render(){\n    return (\n\n      <RenderTodo />\n    )\n  }\n}\n\nfunction MyTodo(props) {\n  const list = props.list;\n ///const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\n\n/*class App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n/*function AppRun () {\n\n  return (\n    <MyTodo list={todoList} />\n  )\n}\nclass MyApp extends React.Component {\n  \n  render(){\n\n    return (\n      <button onClick={AppRun}> click me</button>\n    )\n  }\n}\n \nReactDOM.render(<MyApp />, root); */\n\nconst todosArray = [{\n  \"id\": 1,\n  \"description\": \"Get out of bed\"\n}, {\n  \"id\": 2,\n  \"description\": \"Brush teeth\"\n}, {\n  \"id\": 3,\n  \"description\": \"Eat breakfast\"\n}];\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 12\n      }\n    }, \"Todolist\");\n  }\n\n}\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => {\n      const isSelected = event.target.checked;\n      console.log(isSelected);\n      this.setState(previousState => ({\n        checked: !previousState.checked\n      }));\n    };\n\n    this.handleDelete = index => {\n      const tempDeleteArray = [...this.state.todos];\n      tempDeleteArray.splice(index, 1);\n      this.setState({\n        todos: tempDeleteArray\n      });\n      console.log(this.state.todos);\n    };\n\n    this.state = {\n      todos: this.props.inputArray,\n      checked: false\n    };\n    console.log(this.state.todos);\n  }\n\n  render() {\n    const array = this.state.todos;\n    console.log(array);\n    console.log(this.state.checked);\n    const result = array.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-list-display\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        style: {\n          'textDecoration': this.state.checked ? 'line-through' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: index,\n        onChange: this.handleCheckboxChange,\n        defaultChecked: this.state.checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleDelete(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    });\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 12\n      }\n    }, result);\n  }\n\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.counter = () => {\n      const currentValue = this.state.value;\n      this.setState({\n        value: currentValue + 1\n      });\n    };\n\n    this.state = {\n      value: this.props.initialValue\n    };\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.counter, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 12\n      }\n    }, \"You have used \", this.state.value, \" seconds on this website\");\n  }\n\n}\n\nclass Container extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: []\n    };\n\n    this.handleDisplay = () => {\n      let tempList = this.state.list;\n      console.log(tempList);\n      this.setState({\n        list: tempList.concat(todosArray[tempList.length])\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todolist-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Counter, {\n      initialValue: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, \"Add todo\"), this.state.list.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, \"No items\") : /*#__PURE__*/React.createElement(TodoList, {\n      inputArray: this.state.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 59\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 17\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","root","document","getElementById","todosArray","Header","Component","render","TodoList","constructor","props","handleCheckboxChange","event","isSelected","target","checked","console","log","setState","previousState","handleDelete","index","tempDeleteArray","state","todos","splice","inputArray","array","result","map","item","id","description","Counter","counter","currentValue","value","initialValue","componentDidMount","timer","setInterval","componentWillUnmount","clearInterval","Container","list","handleDisplay","tempList","concat","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import Counter from \"./count\";\nconst root = document.getElementById(\"root\");\n\n/*const  todoList = [\n  {\n    id: 1,\n    description: \"Get out of bed\"\n  },\n  {\n    id: 2,\n    description: \"Brush teeth\"\n  },\n  {\n    id: 3,\n    description: \"Eat breakfast\"\n  }\n]\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [\n        {\n          id: 1,\n          description: \"Get out of bed\"\n        },\n        {\n          id: 2,\n          description: \"Brush teeth\"\n        },\n        {\n          id: 3,\n          description: \"Eat breakfast\"\n        }\n      ]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n  randomTodo() {}\n\n  render() {\n    const { isShow } = this.state;\n    const { todoList } = this.state;\n\n    const myToDoList = todoList.map(tasks => {\n      return <li key={tasks.id}>{tasks.description}</li>;\n    });\n\n    return (\n      <div>\n        {!isShow ? <Counter /> : <p>nothing to show</p>}\n\n        <h1>Todolist</h1>\n\n        <ul>{myToDoList[Math.floor(Math.random() * myToDoList.length)]}</ul>\n\n        <button> Add to do</button>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n\n  render(){\n    return (\n\n      <RenderTodo />\n    )\n  }\n}\n\nfunction MyTodo(props) {\n  const list = props.list;\n ///const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\n\n/*class App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\n/*function AppRun () {\n\n  return (\n    <MyTodo list={todoList} />\n  )\n}\nclass MyApp extends React.Component {\n  \n  render(){\n\n    return (\n      <button onClick={AppRun}> click me</button>\n    )\n  }\n}\n \nReactDOM.render(<MyApp />, root); */\nconst todosArray = [\n  {\n    \"id\": 1,\n    \"description\": \"Get out of bed\"\n  },\n  {\n    \"id\": 2,\n    \"description\": \"Brush teeth\"\n  },\n  {\n    \"id\": 3,\n    \"description\": \"Eat breakfast\"\n  }\n];\nclass Header extends React.Component {\n  render() {\n    return <h1>Todolist</h1>\n  }\n}\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: this.props.inputArray,\n      checked: false\n    };\n    console.log(this.state.todos);\n  }\n\n  handleCheckboxChange = (event) => {\n    const isSelected = event.target.checked\n    console.log(isSelected);\n    this.setState(previousState => ({\n      checked: !previousState.checked\n    })\n    )\n  }\n\n  handleDelete = (index) => {\n    const tempDeleteArray = [...this.state.todos];\n    tempDeleteArray.splice(index, 1);\n    this.setState({\n      todos: tempDeleteArray\n    })\n    console.log(this.state.todos);\n\n  }\n\n  render() {\n    const array = this.state.todos;\n    console.log(array);\n    console.log(this.state.checked);\n\n    const result = array.map((item, index) => {\n      return (\n        <div className='todo-list-display' key={item.id}>\n          <li style={{ 'textDecoration': this.state.checked ? 'line-through' : 'none' }}>{item.description}</li>\n          <label>\n            <input type=\"checkbox\" name={index} onChange={this.handleCheckboxChange} defaultChecked={this.state.checked}></input>\n          </label>\n          <button onClick={() => this.handleDelete(index)}>Delete</button>\n        </div>)\n    })\n    return <ul>{result}</ul>;\n  }\n}\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.initialValue\n    };\n  }\n  componentDidMount() {\n    this.timer = setInterval(this.counter, 1000);\n\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  counter = () => {\n    const currentValue = this.state.value;\n    this.setState({\n      value: currentValue + 1\n    });\n  }\n\n  render() {\n    return <p>You have used {this.state.value} seconds on this website</p>\n  }\n\n}\n\n\nclass Container extends React.Component {\n  state = {\n    list: []\n  };\n\n  handleDisplay = () => {\n    let tempList = this.state.list;\n    console.log(tempList);\n\n    this.setState({\n      list: tempList.concat(todosArray[tempList.length])\n    })\n\n  }\n\n  render() {\n    return (\n      <div className='todolist-container'>\n        <Header />\n        <Counter initialValue={0} />\n        <button onClick={this.handleDisplay}>Add todo</button>\n        {this.state.list.length === 0 ? <p>No items</p> : <TodoList inputArray={this.state.list} />}\n      </div>);\n\n  }\n}\n\nReactDOM.render(<Container />, root);"]},"metadata":{},"sourceType":"module"}