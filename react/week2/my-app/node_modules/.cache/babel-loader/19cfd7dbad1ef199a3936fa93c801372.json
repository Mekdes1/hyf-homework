{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [{\n        \"id\": 1,\n        \"description\": \"Get out of bed\"\n      }, {\n        \"id\": 2,\n        \"description\": \"Brush teeth\"\n      }, {\n        \"id\": 3,\n        \"description\": \"Eat breakfast\"\n      }]\n    };\n  }\n\n  randomTodo() {\n    //const myToDoList = this.state.todoList.map(tasks => {\n    //return <li key={tasks.id}>{tasks.description}</li>;\n    //  });\n    console.log('working'); //return <ul>\n    //{ myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    //   </ul>;\n  }\n\n  render() {\n    const {\n      isShow\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, !isShow ? /*#__PURE__*/React.createElement(Counter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }\n    }, \"nothing to show\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, \"Todolist\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.randomTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, \" Add to do\"));\n  }\n\n}\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(RenderTodo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 2\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","Counter","root","document","getElementById","RenderTodo","Component","state","todoList","randomTodo","console","log","render","isShow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AAENC,MAAAA,QAAQ,EAAG,CACX;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OADW,EAKX;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OALW,EASX;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OATW;AAFL,KAF8B;AAAA;;AAmBxCC,EAAAA,UAAU,GAAE;AAEV;AAEE;AACA;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EANM,CAQP;AACC;AACA;AAEH;;AAEHC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKN,KAAtB;AAGG,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAER,CAACM,MAAD,gBAAU,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFd,eAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAMT;AAAQ,MAAA,OAAO,EAAE,KAAKJ,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANS,CAAP;AAYJ;;AAjDuC;AAsExC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCAT,QAAQ,CAACY,MAAT,eACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EACkBV,IADlB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component{\n\n  state = {\n    \n    todoList : [ \n    {\n      \"id\": 1,\n      \"description\": \"Get out of bed\"\n    },\n    {\n      \"id\": 2,\n      \"description\": \"Brush teeth\"\n    },\n    {\n      \"id\": 3,\n      \"description\": \"Eat breakfast\"\n    }\n  ]}\n\nrandomTodo(){\n  \n  //const myToDoList = this.state.todoList.map(tasks => {\n\n    //return <li key={tasks.id}>{tasks.description}</li>;\n    //  });\n      console.log('working')\n\n     //return <ul>\n      //{ myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n      //   </ul>;\n    \n  }\n    \nrender(){\n  const {isShow} = this.state;\n \n  \n     return <div> \n\n   {!isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n\n   <button onClick={this.randomTodo}> Add to do</button>\n    \n  </div>\n  \n \n\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\nReactDOM.render(\n <RenderTodo /> , root);\n"]},"metadata":{},"sourceType":"module"}