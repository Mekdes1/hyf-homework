{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [{\n        \"id\": 1,\n        \"description\": \"Get out of bed\"\n      }, {\n        \"id\": 2,\n        \"description\": \"Brush teeth\"\n      }, {\n        \"id\": 3,\n        \"description\": \"Eat breakfast\"\n      }]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n\n  randomTodo() {\n    function handleClick(e) {\n      e.preventDefault();\n      const {\n        todoList\n      } = this.state;\n      console.log({\n        todoList\n      });\n      const todo = this.state;\n      const myToDoList = todo.todoList.map(tasks => {\n        return /*#__PURE__*/React.createElement(\"diV\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: tasks.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }\n        }, tasks.description), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }\n        }, myToDoList[Math.floor(Math.random() * myToDoList.length)]));\n      });\n      console.log('working');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }\n      }, \"Add butoon\"));\n    }\n  }\n\n  render() {\n    const {\n      isShow\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, !isShow ? /*#__PURE__*/React.createElement(Counter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, \"nothing to show\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, \"Todolist\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.randomTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 1\n      }\n    }, \"click\")));\n  }\n\n}\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(RenderTodo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 2\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","Counter","root","document","getElementById","RenderTodo","Component","constructor","props","state","todoList","randomTodo","bind","handleClick","e","preventDefault","console","log","todo","myToDoList","map","tasks","id","description","Math","floor","random","length","render","isShow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAwC;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG,CACT;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OADS,EAKT;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OALS,EAST;AACE,cAAM,CADR;AAEE,uBAAe;AAFjB,OATS;AADA,KAAb;AAmBA,SAAKC,UAAL,GAAiB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAjB;AAGD;;AAIFD,EAAAA,UAAU,GAAE;AACX,aAASE,WAAT,CAAqBC,CAArB,EAAuB;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACF,YAAM;AAACL,QAAAA;AAAD,UAAa,KAAKD,KAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACP,QAAAA;AAAD,OAAZ;AACA,YAAMQ,IAAI,GAAG,KAAKT,KAAlB;AAEA,YAAMU,UAAU,GAAGD,IAAI,CAACR,QAAL,CAAcU,GAAd,CAAkBC,KAAK,IAAI;AAE5C,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACL;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,KAAK,CAACE,WAA1B,CADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEJ,UAAU,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,UAAU,CAACQ,MAAtC,CAAD,CADZ,CAFK,CAAP;AAME,OARe,CAAnB;AASIX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAED,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL;AAAQ,QAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADK,CAAP;AAIF;AAED;;AAIFe,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKpB,KAAtB;AAGG,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAER,CAACoB,MAAD,gBAAU,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFd,eAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJQ,eAKZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,OAAO,EAAE,KAAKlB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CALY,CAAP;AAcJ;;AA5EuC;AAiGxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCAX,QAAQ,CAAC4B,MAAT,eACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EACkB1B,IADlB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\n\nclass RenderTodo extends React.Component{\n\nconstructor(props) {\n    super(props);\n    this.state = {\n      todoList : [ \n        {\n          \"id\": 1,\n          \"description\": \"Get out of bed\"\n        },\n        {\n          \"id\": 2,\n          \"description\": \"Brush teeth\"\n        },\n        {\n          \"id\": 3,\n          \"description\": \"Eat breakfast\"\n        }\n      ]\n     \n    }\n\n    \n    this.randomTodo= this.randomTodo.bind(this); \n\n    \n  }\n  \n    \n    \n randomTodo(){\n  function handleClick(e){\n    e.preventDefault();\n  const {todoList} = this.state;\n  console.log({todoList})\n  const todo = this.state;\n  \n  const myToDoList = todo.todoList.map(tasks => {\n\n    return <diV>\n      <li key={tasks.id}>{tasks.description}</li>\n      <ul>\n      { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n     </ul>\n      </diV>;\n     });\n      console.log('working')\n\n     return <div>\n       <button onClick={handleClick}>Add butoon</button>\n     </div>\n    \n  }\n\n }\n \n    \n\nrender(){\n  const {isShow} = this.state;\n \n  \n     return <div> \n\n   {!isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n<div>\n<button onClick={this.randomTodo}>click</button>\n</div>\n  \n    \n  </div>\n  \n \n\n}\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\nReactDOM.render(\n <RenderTodo /> , root);\n"]},"metadata":{},"sourceType":"module"}