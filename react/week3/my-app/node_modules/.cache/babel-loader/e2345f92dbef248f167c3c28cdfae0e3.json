{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\nconst root = document.getElementById(\"root\");\nconst todos = [{\n  \"id\": 1,\n  \"description\": \"Get out of bed\"\n}, {\n  \"id\": 2,\n  \"description\": \"Brush teeth\"\n}, {\n  \"id\": 3,\n  \"description\": \"Eat breakfast\"\n}];\n\nclass RenderTodo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: {\n        todos\n      }\n    };\n  }\n\n  render() {\n    const {\n      todoList\n    } = this.state;\n    console.log(this.state);\n    return this.state;\n  }\n\n}\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(RenderTodo, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 2\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","Counter","root","document","getElementById","todos","RenderTodo","Component","state","todoList","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AAEA,MAAMC,KAAK,GAAG,CACZ;AACE,QAAM,CADR;AAEE,iBAAe;AAFjB,CADY,EAKZ;AACE,QAAM,CADR;AAEE,iBAAe;AAFjB,CALY,EASZ;AACE,QAAM,CADR;AAEE,iBAAe;AAFjB,CATY,CAAd;;AAgBA,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AAACC,MAAAA,QAAQ,EAAG;AAACJ,QAAAA;AAAD;AAAZ,KAF8B;AAAA;;AAGxCK,EAAAA,MAAM,GAAE;AACN,UAAM;AAACD,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACC,WAAO,KAAKA,KAAZ;AAGD;;AATuC;AA+BxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCAR,QAAQ,CAACU,MAAT,eACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,EACkBR,IADlB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from './count';\n\nconst root = document.getElementById(\"root\");\n\nconst todos = [ \n  {\n    \"id\": 1,\n    \"description\": \"Get out of bed\"\n  },\n  {\n    \"id\": 2,\n    \"description\": \"Brush teeth\"\n  },\n  {\n    \"id\": 3,\n    \"description\": \"Eat breakfast\"\n  }\n];\n\n\nclass RenderTodo extends React.Component{\n\n  state = {todoList : {todos}}\nrender(){\n  const {todoList} = this.state\n console.log(this.state)\n  return this.state \n  \n  \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*function MyTodo(props) {\n  const list = props.list;\n // const myToDoList = list.map(tasks => {\n   // return <li key={tasks.id}>{tasks.description}</li>;\n  //});\n\n  const myToDoList = list.map(tasks => {\n     return <li>{tasks.description}</li>\n   });\n \n  return <ul>\n\n   { myToDoList[Math.floor(Math.random() * myToDoList.length)] } \n    \n  </ul>;\n}\n\n\nclass App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\nReactDOM.render(\n <RenderTodo /> , root);\n"]},"metadata":{},"sourceType":"module"}