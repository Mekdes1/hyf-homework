{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\n\nfunction RenderList(props) {\n  const isComplete = props.todos.completed;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    id: \"lists\",\n    style: {\n      textDecoration: isComplete ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.todos.description, \" || \", props.todos.deadline, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: props.handelCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \" Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.editTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Edit \"));\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfTodos: [],\n      todoName: \"\",\n      deadlineDate: \"\",\n      updateInput: \"\"\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.handelCheckbox = this.handelCheckbox.bind(this);\n  }\n\n  feachTodoArray() {\n    return fetch(\"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\").then(data => data.json());\n  }\n\n  addTodo() {\n    this.feachTodoArray().then(response => {\n      const random = response[Math.floor(Math.random() * response.length)];\n      this.setState({\n        listOfTodos: [...this.state.listOfTodos, random]\n      });\n    });\n  }\n\n  addNewTodo(todoName, deadlineDate) {\n    this.setState({\n      listOfTodos: [...this.state.listOfTodos, {\n        description: todoName,\n        completed: false,\n        deadline: deadlineDate\n      }]\n    });\n  }\n\n  update(Input, Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map((tasks, index) => {\n        if (Index === index) {\n          return [...this.state.listOfTodos, {\n            description: Input,\n            completed: false\n          }];\n        }\n      })\n    });\n  }\n\n  editTodo(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map((task, index) => {\n        if (Index === index) {\n          return { ...task,\n            description: /*#__PURE__*/React.createElement(\"form\", {\n              onSubmit: event => {\n                event.preventDefault();\n                this.update(this.state.updateInput, index);\n                this.setState({\n                  updateInput: \"\"\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 27\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              type: \"text\",\n              placeholder: \"update todo\",\n              id: \"update\",\n              value: this.state.updateInput,\n              onChange: event => {\n                console.log(this.input.value);\n                this.setState({\n                  updateInput: event.target.value\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }\n            }), /*#__PURE__*/React.createElement(\"button\", {\n              type: \"submit\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 16\n              }\n            }, \"update todo\"))\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  }\n\n  updateTodo(Index) {}\n\n  handelCheckbox(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map((task, index) => {\n        if (Index === index) {\n          return { ...task,\n            completed: !task.completed\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  }\n\n  removeTodo(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter((item, index) => {\n        return index !== Index;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, this.state.listOfTodos.map((task, index) => {\n      return /*#__PURE__*/React.createElement(RenderList, {\n        todos: task,\n        key: index,\n        deleteTodo: () => this.removeTodo(index),\n        handelCheckbox: () => this.handelCheckbox(index),\n        editTodo: () => this.editTodo(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \" Add to do\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.addNewTodo(this.state.todoName, this.state.deadlineDate);\n        this.setState({\n          todoName: \"\",\n          deadlineDate: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"Todo description :\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"New Todo name\",\n      value: this.state.todoName,\n      onChange: event => {\n        console.log(event.target.value);\n        this.setState({\n          todoName: event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }), \"Deadline :\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"New Deadline Date\",\n      value: this.state.deadlineDate,\n      onChange: event => {\n        this.setState({\n          deadlineDate: event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"Add new todo\"))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","RenderList","props","isComplete","todos","completed","textDecoration","description","deadline","handelCheckbox","deleteTodo","editTodo","TodoList","Component","state","listOfTodos","todoName","deadlineDate","updateInput","addTodo","bind","removeTodo","feachTodoArray","fetch","then","data","json","response","random","Math","floor","length","setState","addNewTodo","update","Input","Index","map","tasks","index","task","event","preventDefault","console","log","input","value","target","updateTodo","filter","item","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction RenderList(props) {\r\n  const isComplete = props.todos.completed;\r\n  return (\r\n    <li\r\n      id=\"lists\"\r\n      style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}\r\n    >\r\n      {props.todos.description} || {props.todos.deadline}\r\n      <input type=\"checkbox\" onChange={props.handelCheckbox}></input>\r\n      <button onClick={props.deleteTodo}> Delete</button>\r\n      <button onClick={props.editTodo}>Edit </button>\r\n     \r\n    </li>\r\n  );\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    listOfTodos: [],\r\n    todoName: \"\",\r\n    deadlineDate: \"\",\r\n    updateInput:\"\",\r\n  };\r\n\r\n  addTodo = this.addTodo.bind(this);\r\n  removeTodo = this.removeTodo.bind(this);\r\n  handelCheckbox = this.handelCheckbox.bind(this);\r\n\r\n  feachTodoArray() {\r\n    return fetch(\r\n      \"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\"\r\n    ).then((data) => data.json());\r\n  }\r\n\r\n  addTodo() {\r\n    this.feachTodoArray().then((response) => {\r\n      const random = response[Math.floor(Math.random() * response.length)];\r\n\r\n      this.setState({\r\n        listOfTodos: [...this.state.listOfTodos, random],\r\n      });\r\n    });\r\n  }\r\n\r\n  addNewTodo(todoName, deadlineDate) {\r\n    this.setState({\r\n      listOfTodos: [\r\n        ...this.state.listOfTodos,\r\n        { description: todoName, completed: false, deadline: deadlineDate },\r\n      ],\r\n    });\r\n  }\r\n  update(Input,Index) {\r\n    this.setState({\r\n      listOfTodos:this.state.listOfTodos.map((tasks,index)=> {\r\n        if(Index ===  index) {\r\n          return  [ ...this.state.listOfTodos,\r\n              {  description:Input, completed: false },\r\n          ]\r\n          \r\n        \r\n        } \r\n        \r\n      })\r\n      \r\n      \r\n     \r\n        \r\n      });\r\n  \r\n  }\r\n\r\n  editTodo(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.map((task, index) => {\r\n        if (Index === index) {\r\n          return {\r\n            ...task,\r\n            description: (<form onSubmit={(event) => {\r\n                event.preventDefault();\r\n               \r\n                this.update(this.state.updateInput,index);\r\n                this.setState({ updateInput: \"\" });\r\n                \r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"update todo\"\r\n                id=\"update\"\r\n                value={this.state.updateInput}\r\n                onChange={(event) => {\r\n                  console.log(this.input.value)\r\n                  this.setState({\r\n                    updateInput: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n               <button type=\"submit\">update todo</button>\r\n          </form>\r\n            )\r\n          }\r\n        } \r\n        \r\n        else {\r\n          return task;\r\n        }\r\n      }),\r\n    });\r\n  }\r\n\r\n\r\n  updateTodo(Index) {\r\n  \r\n  }\r\n\r\n  handelCheckbox(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.map((task, index) => {\r\n        if (Index === index) {\r\n          return { ...task, completed: !task.completed };\r\n        } else {\r\n          return task;\r\n        }\r\n      }),\r\n    });\r\n  }\r\n\r\n  removeTodo(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.filter((item, index) => {\r\n        return index !== Index;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"display\">\r\n        <h1>TodoList</h1>\r\n\r\n        <ul>\r\n          {this.state.listOfTodos.map((task, index) => {\r\n            return (\r\n              <RenderList\r\n                todos={task}\r\n                key={index}\r\n                deleteTodo={() => this.removeTodo(index)}\r\n                handelCheckbox={() => this.handelCheckbox(index)}\r\n                editTodo={() => this.editTodo(index)}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <button onClick={this.addTodo}> Add to do</button>\r\n\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              this.addNewTodo(this.state.todoName, this.state.deadlineDate);\r\n              this.setState({ todoName: \"\", deadlineDate: \"\" });\r\n            }}\r\n          >\r\n            Todo description :{\" \"}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New Todo name\"\r\n              value={this.state.todoName}\r\n              onChange={(event) => {\r\n                console.log(event.target.value)\r\n                this.setState({\r\n                  todoName: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n            Deadline :{\" \"}\r\n            <input\r\n              type=\"date\"\r\n              placeholder=\"New Deadline Date\"\r\n              value={this.state.deadlineDate}\r\n              onChange={(event) => {\r\n    \r\n                this.setState({\r\n                  deadlineDate: event.target.value,\r\n                });\r\n              }}\r\n            />\r\n            <button type=\"submit\">Add new todo</button>\r\n          </form>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}