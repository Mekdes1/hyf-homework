{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\n\nfunction RenderList(props) {\n  const isComplete = props.todos.completed;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    id: \"lists\",\n    style: {\n      textDecoration: isComplete ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.todos.description, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: props.handelCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \" Delete\"));\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfTodos: [],\n      todoName: \"\"\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.handelCheckbox = this.handelCheckbox.bind(this);\n  }\n\n  feachTodoArray() {\n    return fetch(\"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\").then(data => data.json());\n  }\n\n  addTodo() {\n    this.feachTodoArray().then(response => {\n      const random = response[Math.floor(Math.random() * response.length)];\n      this.setState({\n        listOfTodos: [...this.state.listOfTodos, random]\n      });\n    });\n  }\n\n  addNewTodo(todoName) {\n    this.setState({\n      listOfTodos: [...this.state.listOfTodos, {\n        description: todoName,\n        completed: false\n      }]\n    });\n  }\n\n  handelCheckbox(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map(task => {\n        if (Index === task.id) {\n          return { ...task,\n            completed: !task.completed\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  }\n\n  valueFunc() {\n    console.log('value');\n  }\n\n  removeTodo(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter(item => {\n        return item.id !== Index;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.state.listOfTodos.map((task, index) => {\n      return /*#__PURE__*/React.createElement(RenderList, {\n        todos: task,\n        key: index,\n        deleteTodo: () => this.removeTodo(task.id),\n        handelCheckbox: () => this.handelCheckbox(task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \" Add to do\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.addNewTodo(this.state.todoName);\n        this.setState({\n          todoName: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Todo description : \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"addTodo\",\n      placeholder: \"New Todo name\",\n      value: this.state.todoName,\n      onChange: event => {\n        this.setState({\n          todoName: event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Add new todo\"))));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","RenderList","props","isComplete","todos","completed","textDecoration","description","handelCheckbox","deleteTodo","TodoList","Component","state","listOfTodos","todoName","addTodo","bind","removeTodo","feachTodoArray","fetch","then","data","json","response","random","Math","floor","length","setState","addNewTodo","Index","map","task","id","valueFunc","console","log","filter","item","render","index","event","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction RenderList(props) {\r\n  const isComplete = props.todos.completed;\r\n  return (\r\n    <li id= \"lists\" style={ { textDecoration: isComplete ? \"line-through\" : \"none\" }}>\r\n      {props.todos.description}\r\n\r\n      <input type=\"checkbox\" onChange={props.handelCheckbox}></input>\r\n      <button onClick={props.deleteTodo}> Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    listOfTodos: [],\r\n    todoName: \"\",\r\n  };\r\n\r\n  addTodo = this.addTodo.bind(this);\r\n  removeTodo = this.removeTodo.bind(this);\r\n  handelCheckbox = this.handelCheckbox.bind(this);\r\n\r\n  feachTodoArray() {\r\n    return fetch(\r\n      \"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\"\r\n    ).then((data) => data.json());\r\n  }\r\n\r\n  addTodo() {\r\n    this.feachTodoArray().then((response) => {\r\n      const random = response[Math.floor(Math.random() * response.length)];\r\n\r\n      this.setState({\r\n        listOfTodos: [...this.state.listOfTodos, random],\r\n      });\r\n    });\r\n  }\r\n\r\n  addNewTodo(todoName) {\r\n    this.setState({\r\n      listOfTodos: [...this.state.listOfTodos, { description: todoName, completed: false }],\r\n    });\r\n  }\r\n\r\n  handelCheckbox(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.map((task) => {\r\n        if (Index === task.id) {\r\n          return { ...task, completed: !task.completed };\r\n        } else {\r\n          return task;\r\n        }\r\n      }),\r\n    });\r\n  }\r\n\r\n  valueFunc(){\r\n   \r\n    console.log('value');\r\n  }\r\n\r\n  removeTodo(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.filter((item) => {\r\n        return item.id !== Index;\r\n      }),\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"display\">\r\n        <h1>TodoList</h1>\r\n\r\n        <ul>\r\n\r\n          \r\n          \r\n         {this.state.listOfTodos.map((task, index) => {\r\n            return (\r\n              <RenderList\r\n                todos={task}\r\n                key={index}\r\n                deleteTodo={() => this.removeTodo(task.id)}\r\n                handelCheckbox={() => this.handelCheckbox(task.id)}\r\n              />\r\n            );\r\n          })} \r\n\r\n          <button onClick={this.addTodo}> Add to do</button>\r\n\r\n          <form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            this.addNewTodo(this.state.todoName);\r\n            this.setState({ todoName: \"\" });\r\n            \r\n          }}\r\n        >\r\n        Todo description : <input\r\n            type=\"text\"\r\n            id=\"addTodo\"\r\n            placeholder=\"New Todo name\"\r\n            value={this.state.todoName}\r\n            onChange={(event) => {\r\n              this.setState({\r\n                todoName: event.target.value,\r\n              });\r\n            }} \r\n          />\r\n          <button type=\"submit\">Add new todo</button>\r\n        </form>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}