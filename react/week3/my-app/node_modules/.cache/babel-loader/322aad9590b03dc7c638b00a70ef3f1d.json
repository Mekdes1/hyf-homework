{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [{\n        id: 1,\n        description: \"Get out of bed\"\n      }, {\n        id: 2,\n        description: \"Brush teeth\"\n      }, {\n        id: 3,\n        description: \"Eat breakfast\"\n      }],\n      display: \"none\",\n      checkbox: \"unchecked\",\n      delete: \"notactive\"\n    };\n    this.displayTodo = this.displayTodo.bind(this);\n    this.OnDelet = this.OnDelet.bind(this);\n    this.checkbox = this.checkbox.bind(this);\n  }\n\n  displayTodo() {\n    const displayState = this.state.display;\n    this.setState({\n      display: 'true'\n    });\n  }\n\n  OnDelet() {\n    const todo = this.state.delete;\n    this.setState({\n      delete: 'active'\n    });\n  }\n\n  checkbox() {\n    this.setState({\n      checkBox: 'check'\n    });\n    console.log(this.state.checkbox);\n  }\n\n  render() {\n    const displayState = this.state.display;\n    const todo = this.state.todoList;\n    const checkBox = this.state.checkbox;\n    let shouldDelete;\n    const renderdTodo = [];\n    let input = /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: checkBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }\n    });\n    const myTodo = todo.map(task => {\n      return task.description;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, myTodo.map((task, index) => {\n      shouldDelete = this.state.delete;\n\n      if (displayState === 'true' && shouldDelete === 'notactive') {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            'textDecoration': this.state.checkbox === 'unchecked' ? 'none' : 'line-trough'\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, task, \" \", input, \" \", /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.OnDelet,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 135\n          }\n        }, \"Delet \"));\n      }\n\n      console.log(myTodo[2]);\n\n      if (shouldDelete === 'active') {\n        const deletedTodo = myTodo.slice([task], 1);\n\n        if (!deletedTodo.includes(task)) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 24\n            }\n          }, task, \"  \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            onChange: this.checkbox,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 36\n            }\n          }), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n            onClick: this.OnDelet,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 88\n            }\n          }, \"Delet \"));\n        }\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.displayTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }\n    }, \" click to add\"));\n  }\n\n}\n\nexport default TodoList; // todo.map((task)=>{\n//return <li key={task.id}>{task.description}  <input type=\"checkbox\" value=\"unchecked\" /> <button onClick={this.OnDelet}>Delet </button> </li> \n// })","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","TodoList","Component","constructor","props","state","todoList","id","description","display","checkbox","delete","displayTodo","bind","OnDelet","displayState","setState","todo","checkBox","console","log","render","shouldDelete","renderdTodo","input","myTodo","map","task","index","deletedTodo","slice","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAG,CACP;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OADO,EAKP;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OALO,EASP;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OATO,CADA;AAgBTC,MAAAA,OAAO,EAAG,MAhBD;AAkBTC,MAAAA,QAAQ,EAAE,WAlBD;AAoBTC,MAAAA,MAAM,EAAE;AApBC,KAAb;AAwBA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcG,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAGLD,EAAAA,WAAW,GAAI;AACX,UAAMG,YAAY,GAAG,KAAKV,KAAL,CAAWI,OAAhC;AACA,SAAKO,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAC;AAAV,KAAd;AAEH;;AAEDK,EAAAA,OAAO,GAAG;AACN,UAAMG,IAAI,GAAG,KAAKZ,KAAL,CAAWM,MAAxB;AACA,SAAKK,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAE;AAAT,KAAd;AAEH;;AAEDD,EAAAA,QAAQ,GAAG;AACX,SAAKM,QAAL,CAAc;AAACE,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWK,QAAvB;AACC;;AAGDW,EAAAA,MAAM,GAAE;AACJ,UAAMN,YAAY,GAAG,KAAKV,KAAL,CAAWI,OAAhC;AAEA,UAAMQ,IAAI,GAAG,KAAKZ,KAAL,CAAWC,QAAxB;AAKA,UAAMY,QAAQ,GAAG,KAAKb,KAAL,CAAWK,QAA5B;AACA,QAAIY,YAAJ;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,QAAKC,KAAK,gBAAG;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAEN,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AAEA,UAAMO,MAAM,GAAGR,IAAI,CAACS,GAAL,CAAUC,IAAD,IAAQ;AAG5B,aAAOA,IAAI,CAACnB,WAAZ;AAGH,KANc,CAAf;AAQA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGViB,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACxBN,MAAAA,YAAY,GAAG,KAAKjB,KAAL,CAAWM,MAA1B;;AAEC,UAAGI,YAAY,KAAK,MAAjB,IAA2BO,YAAY,KAAK,WAA/C,EAA4D;AAC7D,4BAAQ;AAAI,UAAA,KAAK,EAAE;AAAE,8BAAkB,KAAKjB,KAAL,CAAWK,QAAX,KAAwB,WAAxB,GAAsC,MAAtC,GAA+C;AAAnE,WAAX;AAA+F,UAAA,GAAG,EAAEkB,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4GD,IAA5G,OAAmHH,KAAnH,oBAA0H;AAAQ,UAAA,OAAO,EAAE,KAAKV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1H,CAAR;AAGE;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAM,CAAC,CAAD,CAAlB;;AACG,UAAGH,YAAY,KAAK,QAApB,EAA8B;AAC1B,cAAMO,WAAW,GAAGJ,MAAM,CAACK,KAAP,CAAa,CAACH,IAAD,CAAb,EAAoB,CAApB,CAApB;;AACA,YAAG,CAACE,WAAW,CAACE,QAAZ,CAAqBJ,IAArB,CAAJ,EAAgC;AAC5B,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,IAAL,qBAAY;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,QAAQ,EAAE,KAAKjB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,qBAAgE;AAAQ,YAAA,OAAO,EAAE,KAAKI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhE,CAAP;AACH;AAEJ;AAKP,KApBD,CAHU,eA8BX;AAAQ,MAAA,OAAO,EAAE,KAAKF,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BW,CAAP;AAkCH;;AA1GsC;;AAkHvC,eAAeX,QAAf,C,CAKA;AACI;AACJ","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoList extends React.Component {\r\n constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        todoList : [\r\n            {\r\n              id: 1,\r\n              description: \"Get out of bed\"\r\n            },\r\n            {\r\n              id: 2,\r\n              description: \"Brush teeth\"\r\n            },\r\n            {\r\n              id: 3,\r\n              description: \"Eat breakfast\"\r\n            }\r\n          ],\r\n\r\n          display : \"none\",\r\n\r\n          checkbox :\"unchecked\",\r\n\r\n          delete: \"notactive\"\r\n          \r\n      }\r\n\r\n      this.displayTodo = this.displayTodo.bind(this);\r\n      this.OnDelet = this.OnDelet.bind(this);\r\n      this.checkbox = this.checkbox.bind(this);\r\n    } \r\n\r\n\r\ndisplayTodo () {\r\n    const displayState = this.state.display\r\n    this.setState({ display:'true'});\r\n   \r\n}\r\n\r\nOnDelet() {\r\n    const todo = this.state.delete\r\n    this.setState({delete :'active'})\r\n    \r\n}\r\n\r\ncheckbox() {\r\nthis.setState({checkBox:'check'})\r\nconsole.log(this.state.checkbox)\r\n}\r\n    \r\n\r\nrender(){\r\n    const displayState = this.state.display\r\n  \r\n    const todo = this.state.todoList\r\n    \r\n    \r\n    \r\n\r\n    const checkBox = this.state.checkbox;\r\n    let shouldDelete;\r\n    const renderdTodo = [];\r\n    let  input = <input type=\"checkbox\" value={checkBox} />\r\n   \r\n    const myTodo = todo.map((task)=>{\r\n\r\n        \r\n        return task.description\r\n        \r\n    \r\n    })\r\n    \r\n    return <div>\r\n { \r\n \r\n myTodo.map((task,index) => {\r\n    shouldDelete = this.state.delete\r\n\r\n     if(displayState === 'true' && shouldDelete === 'notactive') {\r\n    return  <li style={{ 'textDecoration': this.state.checkbox === 'unchecked' ? 'none' : 'line-trough' }} key={index}>{task} {input} <button onClick={this.OnDelet}>Delet </button></li>\r\n   \r\n     \r\n     } \r\n     console.log(myTodo[2])\r\n        if(shouldDelete === 'active') {\r\n            const deletedTodo = myTodo.slice([task],1);\r\n            if(!deletedTodo.includes(task)) {\r\n                return <li>{task}  <input type=\"checkbox\" onChange={this.checkbox} />  <button onClick={this.OnDelet}>Delet </button></li> \r\n            }\r\n            \r\n        }\r\n     \r\n\r\n     \r\n\r\n })\r\n \r\n \r\n\r\n}\r\n\r\n\r\n<button onClick={this.displayTodo}> click to add</button>\r\n    </div>\r\n\r\n\r\n}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default TodoList;\r\n\r\n\r\n\r\n\r\n// todo.map((task)=>{\r\n    //return <li key={task.id}>{task.description}  <input type=\"checkbox\" value=\"unchecked\" /> <button onClick={this.OnDelet}>Delet </button> </li> \r\n// })"]},"metadata":{},"sourceType":"module"}