{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\nconst list = [{\n  id: 1,\n  description: \"Get out of bed\"\n}, {\n  id: 2,\n  description: \"Brush teeth\"\n}, {\n  id: 3,\n  description: \"Eat breakfast\"\n}];\n\nfunction RenderList(props) {\n  const isComplete = props.todos.completed;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: isComplete ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, props.todos.description, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: props.handelCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \" Delete\"));\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfTodos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.handelCheckbox = this.handelCheckbox.bind(this);\n  }\n\n  feachTodoArray() {\n    return fetch(\"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\").then(data => data.json());\n  }\n\n  addTodo() {\n    const random = list[Math.floor(Math.random() * list.length)];\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map(item => {\n        console.log(item);\n\n        if (item === random) {\n          console.log('im working');\n          return [...this.state.listOfTodos, random];\n        } else {\n          console.log('working not');\n          return item;\n        }\n      })\n    });\n    /* this.feachTodoArray().then((response) => {\r\n       \r\n      const random =  response[Math.floor(Math.random() * response.length)];\r\n         \r\n       \r\n       \r\n     }); */\n  }\n\n  handelCheckbox(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map(task => {\n        if (Index === task.id) {\n          return { ...task,\n            completed: !task.completed\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  }\n\n  removeTodo(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter(item => {\n        return item.id !== Index;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, this.state.listOfTodos.map((task, index) => {\n      return /*#__PURE__*/React.createElement(RenderList, {\n        todos: task,\n        key: index,\n        deleteTodo: () => this.removeTodo(task.id),\n        handelCheckbox: () => this.handelCheckbox(task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \" Add to do\")));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","list","id","description","RenderList","props","isComplete","todos","completed","textDecoration","handelCheckbox","deleteTodo","TodoList","Component","state","listOfTodos","addTodo","bind","removeTodo","feachTodoArray","fetch","then","data","json","random","Math","floor","length","setState","map","item","console","log","Index","task","filter","render","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nconst  list = [\r\n  {\r\n    id: 1,\r\n    description: \"Get out of bed\"\r\n  },\r\n  {\r\n    id: 2,\r\n    description: \"Brush teeth\"\r\n  },\r\n  {\r\n    id: 3,\r\n    description: \"Eat breakfast\"\r\n  }\r\n]\r\nfunction RenderList(props) {\r\n  const isComplete = props.todos.completed;\r\n  return (\r\n    <li style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}>\r\n      {props.todos.description}\r\n\r\n      <input type=\"checkbox\" onChange={props.handelCheckbox}></input>\r\n      <button onClick={props.deleteTodo}> Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    listOfTodos: [],\r\n  };\r\n\r\n  addTodo = this.addTodo.bind(this);\r\n  removeTodo = this.removeTodo.bind(this);\r\n  handelCheckbox = this.handelCheckbox.bind(this);\r\n\r\n  feachTodoArray() {\r\n    return fetch(\r\n      \"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\"\r\n    ).then((data) => data.json());\r\n  }\r\n\r\n  addTodo() {\r\n    const random =  list[Math.floor(Math.random() * list.length)];\r\n\r\n    this.setState({\r\n      listOfTodos:this.state.listOfTodos.map((item) => {\r\n          console.log(item)\r\n          if (item === random) {\r\n       console.log('im working')\r\n            return  [...this.state.listOfTodos, random]\r\n          } else {\r\n            console.log('working not')\r\n            return item;\r\n          }\r\n        })\r\n         \r\n       \r\n      });\r\n   /* this.feachTodoArray().then((response) => {\r\n      \r\n     const random =  response[Math.floor(Math.random() * response.length)];\r\n\r\n      \r\n      \r\n      \r\n    }); */\r\n  }\r\n\r\n  handelCheckbox(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.map((task) => {\r\n        if (Index === task.id) {\r\n          return { ...task, completed: !task.completed };\r\n        } else {\r\n          return task;\r\n        }\r\n      }),\r\n    });\r\n  }\r\n\r\n  removeTodo(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.filter((item) => {\r\n        return item.id !== Index;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>TodoList</h1>\r\n        <ul>\r\n          {this.state.listOfTodos.map((task, index) => {\r\n            return (\r\n              <RenderList\r\n                todos={task}\r\n                key={index}\r\n                deleteTodo={() => this.removeTodo(task.id)}\r\n                handelCheckbox={() => this.handelCheckbox(task.id)}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <button onClick={this.addTodo}> Add to do</button>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}