{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\n\nfunction RenderList(props) {\n  const isComplete = props.todos.completed;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: isComplete ? \"line-through\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.todos.description, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: props.handelCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \" Delete\"));\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listOfTodos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n    this.removeTodo = this.removeTodo.bind(this);\n    this.handelCheckbox = this.handelCheckbox.bind(this);\n  }\n\n  feachTodoArray() {\n    return fetch(\"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\").then(data => data.json());\n  }\n\n  addTodo() {\n    this.feachTodoArray().then(response => {\n      const random = response[Math.floor(Math.random() * response.length)];\n      this.state.listOfTodos.map(tasks => {\n        if (tasks == random) {\n          const ans = this.setState({\n            listOfTodos: [...this.state.listOfTodos, random]\n          });\n          console.log(random);\n          return ans;\n        } else {\n          console.log(tasks);\n        }\n      });\n    });\n  }\n\n  handelCheckbox(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map(task => {\n        if (Index === task.id) {\n          return { ...task,\n            completed: !task.completed\n          };\n        } else {\n          return task;\n        }\n      })\n    });\n  }\n\n  removeTodo(Index) {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter(item => {\n        return item.id !== Index;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, this.state.listOfTodos.map((task, index) => {\n      return /*#__PURE__*/React.createElement(RenderList, {\n        todos: task,\n        key: index,\n        deleteTodo: () => this.removeTodo(task.id),\n        handelCheckbox: () => this.handelCheckbox(task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \" Add to do\")));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","RenderList","props","isComplete","todos","completed","textDecoration","description","handelCheckbox","deleteTodo","TodoList","Component","state","listOfTodos","addTodo","bind","removeTodo","feachTodoArray","fetch","then","data","json","response","random","Math","floor","length","map","tasks","ans","setState","console","log","Index","task","id","filter","item","render","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction RenderList(props) {\r\n  const isComplete = props.todos.completed;\r\n  return (\r\n    <li style={{ textDecoration: isComplete ? \"line-through\" : \"none\" }}>\r\n      {props.todos.description}\r\n\r\n      <input type=\"checkbox\" onChange={props.handelCheckbox}></input>\r\n      <button onClick={props.deleteTodo}> Delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    listOfTodos: [],\r\n  };\r\n\r\n  addTodo = this.addTodo.bind(this);\r\n  removeTodo = this.removeTodo.bind(this);\r\n  handelCheckbox = this.handelCheckbox.bind(this);\r\n\r\n  feachTodoArray() {\r\n    return fetch(\r\n      \"https://gist.githubusercontent.com/benna100/391eee7a119b50bd2c5960ab51622532/raw\"\r\n    ).then((data) => data.json());\r\n  }\r\n\r\n  addTodo() {\r\n    this.feachTodoArray().then((response) => {\r\n     const random =  response[Math.floor(Math.random() * response.length)];\r\n\r\n      \r\n     this.state.listOfTodos.map((tasks) =>{\r\n       if(tasks == random) {\r\n      const ans = this.setState({\r\n          listOfTodos: [\r\n            ...this.state.listOfTodos, random\r\n           ,\r\n          ],\r\n        });\r\nconsole.log(random)\r\n        return ans\r\n    \r\n         }\r\nelse {\r\n  console.log(tasks)\r\n}\r\n\r\n     })\r\n      \r\n      \r\n    });\r\n  }\r\n\r\n  handelCheckbox(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.map((task) => {\r\n        if (Index === task.id) {\r\n          return { ...task, completed: !task.completed };\r\n        } else {\r\n          return task;\r\n        }\r\n      }),\r\n    });\r\n  }\r\n\r\n  removeTodo(Index) {\r\n    this.setState({\r\n      listOfTodos: this.state.listOfTodos.filter((item) => {\r\n        return item.id !== Index;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>TodoList</h1>\r\n        <ul>\r\n          {this.state.listOfTodos.map((task, index) => {\r\n            return (\r\n              <RenderList\r\n                todos={task}\r\n                key={index}\r\n                deleteTodo={() => this.removeTodo(task.id)}\r\n                handelCheckbox={() => this.handelCheckbox(task.id)}\r\n              />\r\n            );\r\n          })}\r\n\r\n          <button onClick={this.addTodo}> Add to do</button>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}