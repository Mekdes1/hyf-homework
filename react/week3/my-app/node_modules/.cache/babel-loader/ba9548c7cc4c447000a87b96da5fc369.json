{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [{\n        id: 1,\n        description: \"Get out of bed\"\n      }, {\n        id: 2,\n        description: \"Brush teeth\"\n      }, {\n        id: 3,\n        description: \"Eat breakfast\"\n      }],\n      display: \"none\",\n      checkbox: \"unchecked\",\n      delete: \"notactive\"\n    };\n    this.displayTodo = this.displayTodo.bind(this);\n    this.OnDelet = this.OnDelet.bind(this);\n    this.checkBox = this.checkBox.bind(this);\n  }\n\n  displayTodo() {\n    this.setState({\n      display: \"true\"\n    });\n  }\n\n  OnDelet() {\n    this.setState({\n      delete: \"active\"\n    });\n  }\n\n  checkBox() {\n    this.setState({\n      checkbox: \"check\"\n    });\n    console.log(this.state.checkbox);\n  }\n\n  render() {\n    const displayState = this.state.display;\n    const todo = this.state.todoList;\n    const checkBox = this.state.checkbox;\n    let shouldDelete;\n    const renderdTodo = [];\n    const myTodo = todo.map(task => {\n      return task.description;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, myTodo.map((task, index) => {\n      shouldDelete = this.state.delete;\n\n      if (displayState === \"true\" && shouldDelete === \"notactive\") {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          style: {\n            textDecoration: this.state.checkbox === \"unchecked\" ? \"none\" : \"line-through\"\n          },\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }, task, \" \", /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.OnDelet,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 24\n          }\n        }, \"Delet \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: this.checkBox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      console.log(myTodo[2]);\n\n      if (shouldDelete === \"active\") {\n        const deletedTodo = myTodo.slice([task], 1);\n\n        if (!deletedTodo.includes(task)) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }\n          }, task, \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"checkbox\",\n            onChange: this.checkBox,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 26\n            }\n          }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n            onClick: this.OnDelet,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }\n          }, \"Delet \"));\n        }\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.displayTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \" click to add\"));\n  }\n\n}\n\nexport default TodoList; // todo.map((task)=>{\n//return <li key={task.id}>{task.description}  <input type=\"checkbox\" value=\"unchecked\" /> <button onClick={this.OnDelet}>Delet </button> </li>\n// })","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","TodoList","Component","constructor","props","state","todoList","id","description","display","checkbox","delete","displayTodo","bind","OnDelet","checkBox","setState","console","log","render","displayState","todo","shouldDelete","renderdTodo","myTodo","map","task","index","textDecoration","deletedTodo","slice","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todoList: [\r\n        {\r\n          id: 1,\r\n          description: \"Get out of bed\"\r\n        },\r\n        {\r\n          id: 2,\r\n          description: \"Brush teeth\"\r\n        },\r\n        {\r\n          id: 3,\r\n          description: \"Eat breakfast\"\r\n        }\r\n      ],\r\n\r\n      display: \"none\",\r\n\r\n      checkbox: \"unchecked\",\r\n\r\n      delete: \"notactive\"\r\n    };\r\n\r\n    this.displayTodo = this.displayTodo.bind(this);\r\n    this.OnDelet = this.OnDelet.bind(this);\r\n    this.checkBox = this.checkBox.bind(this);\r\n  }\r\n\r\n  displayTodo() {\r\n  \r\n    this.setState({ display: \"true\" });\r\n  }\r\n\r\n  OnDelet() {\r\n    \r\n    this.setState({ delete: \"active\" });\r\n  }\r\n\r\n  checkBox() {\r\n    this.setState({checkbox: \"check\" });\r\n    console.log(this.state.checkbox);\r\n  }\r\n\r\n  render() {\r\n    const displayState = this.state.display;\r\n    const todo = this.state.todoList;\r\n\r\n    const checkBox = this.state.checkbox;\r\n    let shouldDelete;\r\n    const renderdTodo = [];\r\n    const myTodo = todo.map(task => {\r\n      return task.description;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {myTodo.map((task, index) => {\r\n          shouldDelete = this.state.delete;\r\n\r\n          if (displayState === \"true\" && shouldDelete === \"notactive\") {\r\n            return (\r\n              <li\r\n                style={{\r\n                  textDecoration:\r\n                    this.state.checkbox === \"unchecked\" ? \"none\" : \"line-through\"\r\n                }}\r\n                key={index}\r\n              >\r\n                {task} <button onClick={this.OnDelet}>Delet </button>{\" \"}\r\n                <input type=\"checkbox\" onChange={this.checkBox} />\r\n              </li>\r\n            );\r\n          }\r\n          console.log(myTodo[2]);\r\n          if (shouldDelete === \"active\") {\r\n            const deletedTodo = myTodo.slice([task], 1);\r\n            if (!deletedTodo.includes(task)) {\r\n              return (\r\n                <li>\r\n                  {task} <input type=\"checkbox\" onChange={this.checkBox} />{\" \"}\r\n                  <button onClick={this.OnDelet}>Delet </button>\r\n                </li>\r\n              );\r\n            }\r\n          }\r\n        })}\r\n\r\n        <button onClick={this.displayTodo}> click to add</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n\r\n// todo.map((task)=>{\r\n//return <li key={task.id}>{task.description}  <input type=\"checkbox\" value=\"unchecked\" /> <button onClick={this.OnDelet}>Delet </button> </li>\r\n// })\r\n"]},"metadata":{},"sourceType":"module"}