{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from \"./count\";\nconst root = document.getElementById(\"root\");\nconst todoList = [{\n  id: 1,\n  description: \"Get out of bed\"\n}, {\n  id: 2,\n  description: \"Brush teeth\"\n}, {\n  id: 3,\n  description: \"Eat breakfast\"\n}];\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [{\n        id: 1,\n        description: \"Get out of bed\"\n      }, {\n        id: 2,\n        description: \"Brush teeth\"\n      }, {\n        id: 3,\n        description: \"Eat breakfast\"\n      }]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n\n  randomTodo() {\n    const text = /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"working\");\n    console.log(this.state.todoList[1].id);\n    return text;\n  }\n\n  render() {\n    const {\n      isShow\n    } = this.state;\n    const {\n      todoList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.randomTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"click me\");\n    /*   const myToDoList = todoList.map(tasks => {\n         return <li key={tasks.id}>{tasks.description}</li>;\n       });\n        return (\n         <div>\n           {!isShow ? <Counter /> : <p>nothing to show</p>}\n            <h1>Todolist</h1>\n            <ul>{myToDoList[Math.floor(Math.random() * myToDoList.length)]}</ul>\n            <button> Add to do</button>\n         </div>\n      ); */\n  }\n\n}\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(RenderTodo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n/*class App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 17\n  }\n}), root);","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/index.js"],"names":["React","ReactDOM","Counter","root","document","getElementById","todoList","id","description","RenderTodo","Component","constructor","props","state","randomTodo","bind","text","console","log","render","isShow","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;AAEA,MAAOC,QAAQ,GAAG,CAChB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CADgB,EAKhB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CALgB,EAShB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,WAAW,EAAE;AAFf,CATgB,CAAlB;;AAeA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXP,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OADQ,EAKR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OALQ,EASR;AACED,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,WAAW,EAAE;AAFf,OATQ;AADC,KAAb;AAgBA,SAAKM,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDD,EAAAA,UAAU,GAAG;AACd,UAAME,IAAI,gBAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWP,QAAX,CAAoB,CAApB,EAAuBC,EAAnC;AACG,WAAOS,IAAP;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKP,KAAxB;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKO,KAA1B;AAGD,wBAAO;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEF;;;;;;;;;;;AAiBE;;AAnDsC;;AAsDzC,MAAMO,GAAN,SAAkBrB,KAAK,CAACU,SAAxB,CAAkC;AAEhCS,EAAAA,MAAM,GAAE;AACN,wBAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAID;;AAP+B;AAalC;;;;;;;;;;;;;;;;;;;;;;;AAwBAlB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBhB,IAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Counter from \"./count\";\nconst root = document.getElementById(\"root\");\n\nconst  todoList = [\n  {\n    id: 1,\n    description: \"Get out of bed\"\n  },\n  {\n    id: 2,\n    description: \"Brush teeth\"\n  },\n  {\n    id: 3,\n    description: \"Eat breakfast\"\n  }\n]\n\nclass RenderTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [\n        {\n          id: 1,\n          description: \"Get out of bed\"\n        },\n        {\n          id: 2,\n          description: \"Brush teeth\"\n        },\n        {\n          id: 3,\n          description: \"Eat breakfast\"\n        }\n      ]\n    };\n    this.randomTodo = this.randomTodo.bind(this);\n  }\n  randomTodo() {\n const text=<h1>working</h1>\n console.log(this.state.todoList[1].id)\n    return text\n  }\n\n  render() {\n    const { isShow } = this.state;\n    const { todoList } = this.state;\n\n\n   return <button onClick={this.randomTodo}>click me</button>\n\n /*   const myToDoList = todoList.map(tasks => {\n      return <li key={tasks.id}>{tasks.description}</li>;\n    });\n\n    return (\n      <div>\n        {!isShow ? <Counter /> : <p>nothing to show</p>}\n\n        <h1>Todolist</h1>\n\n        <ul>{myToDoList[Math.floor(Math.random() * myToDoList.length)]}</ul>\n\n        <button> Add to do</button>\n      </div>\n   ); */\n \n \n  } \n}\n\nclass App extends React.Component {\n\n  render(){\n    return (\n\n      <RenderTodo />\n    )\n  }\n}\n\n\n\n\n/*class App extends React.Component {\n state = {isShow: true}\n\n listOfTodo() {\nconsole.log('working')\nreturn <MyTodo list={todos} />\n \n }\n \n\n  render(){\n    const {isShow} = this.state;\n    return <div>\n       {isShow ? <Counter />:<p>nothing to show</p>}\n      \n    <h1>Todolist</h1>\n    <button onClick={this.listOfTodo}>Add todos</button>\n    \n    </div>\n  }\n}  */\n\n\n\nReactDOM.render(<App />, root);\n"]},"metadata":{},"sourceType":"module"}