{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yesme\\\\Desktop\\\\react-week2\\\\my-app\\\\src\\\\render.js\";\nimport React from \"react\";\nconst list = [{\n  id: 1,\n  description: \"Get out of bed\"\n}, {\n  id: 2,\n  description: \"Brush teeth\"\n}, {\n  id: 3,\n  description: \"Eat breakfast\"\n}, {\n  id: 4,\n  description: \"Go for a walk\"\n}, {\n  id: 5,\n  description: \"Finish homework \"\n}];\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      remove: \"off\",\n      display: \"off\",\n      text: \"on\"\n    };\n    this.onAdd = this.onAdd.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.checkBox = this.checkBox.bind(this);\n  }\n\n  onAdd() {\n    this.setState({\n      display: \"on\"\n    });\n  }\n\n  checkBox(text) {\n    this.setState({\n      text: \"on\"\n    });\n    const checked = /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        textDecoration: \"line-through\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \" \", text);\n    return checked;\n  }\n\n  onDelete(task) {\n    this.setState({\n      remove: \"on\"\n    });\n    this.state.todoList.map(item => {\n      const index = this.state.todoList.indexOf(item);\n\n      if (task === item.id && this.state.remove === \"on\") {\n        this.state.todoList.splice(index, 1);\n      }\n    });\n  }\n\n  render() {\n    const todoList = this.state.todoList;\n    let displayList;\n\n    if (this.state.display === \"on\" && list.length !== 0) {\n      todoList.push(list[list.length - 1]);\n      list.splice([list.length - 1]);\n    } else if (this.state.display === \"on\" && list.length !== 0) {\n      console.log(\"all renderd\");\n    }\n\n    displayList = todoList.map(task => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: task.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, task.description, \" \", \" \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.checkBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.onDelete(task.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, \" Delete \"));\n    });\n\n    if (this.state.todoList.length === 0) {\n      displayList = /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, \" NO items \");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"TodoList\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, displayList, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Add todo\"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/yesme/Desktop/react-week2/my-app/src/render.js"],"names":["React","list","id","description","TodoList","Component","constructor","props","state","todoList","remove","display","text","onAdd","bind","onDelete","checkBox","setState","checked","textDecoration","task","map","item","index","indexOf","splice","render","displayList","length","push","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nconst list = [\r\n  {\r\n    id: 1,\r\n    description: \"Get out of bed\"\r\n  },\r\n  {\r\n    id: 2,\r\n    description: \"Brush teeth\"\r\n  },\r\n  {\r\n    id: 3,\r\n    description: \"Eat breakfast\"\r\n  },\r\n\r\n  {\r\n    id: 4,\r\n    description: \"Go for a walk\"\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    description: \"Finish homework \"\r\n  }\r\n];\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      todoList: [],\r\n\r\n      remove: \"off\",\r\n\r\n      display: \"off\",\r\n\r\n      text: \"on\"\r\n    };\r\n\r\n    this.onAdd = this.onAdd.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.checkBox = this.checkBox.bind(this);\r\n  }\r\n\r\n  onAdd() {\r\n    this.setState({ display: \"on\" });\r\n  }\r\n  \r\n   checkBox(text) {\r\n    this.setState({ text: \"on\" });\r\n    const checked = <li style={{\r\n      textDecoration: \"line-through\"\r\n    }}> {text}</li>\r\n\r\n    return checked\r\n\r\n   }\r\n\r\n  onDelete(task) {\r\n    this.setState({ remove: \"on\" });\r\n\r\n    this.state.todoList.map(item => {\r\n      const index = this.state.todoList.indexOf(item);\r\n      if (task === item.id && this.state.remove === \"on\") {\r\n        this.state.todoList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n   \r\n  }\r\n\r\n  render() {\r\n    const todoList = this.state.todoList;\r\n    let displayList;\r\n\r\n    if (this.state.display === \"on\" && list.length !== 0) {\r\n      todoList.push(list[list.length - 1]);\r\n      list.splice([list.length - 1]);\r\n    } else if (this.state.display === \"on\" && list.length !== 0) {\r\n      console.log(\"all renderd\");\r\n    }\r\n\r\n    displayList = todoList.map(task => {\r\n      return (\r\n        <li key={task.id}>\r\n          {task.description}{\" \"} <input type=\"checkbox\" onChange={this.checkBox}/>\r\n          <button onClick={() => this.onDelete(task.id)}> Delete </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (this.state.todoList.length === 0) {\r\n      displayList = <h2> NO items </h2>\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>TodoList</h1>\r\n        <ul>{displayList} </ul>\r\n        <button onClick={this.onAdd}>Add todo</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}